import { useState } from 'react';
import { Button, Text, Flex, Container, Heading, Box, Spinner } from '@chakra-ui/react';

import TextInput from '../components/common/inputs/TextInput';
import { useResetUserPassword } from '../hooks/mutations/useResetUserPassword';
import { useParams } from 'react-router-dom';

export default function ResetPasswordView() {
	const [credentials, setCredentials] = useState<{ newPassword: string; confirmPassword: string }>({
		newPassword: '',
		confirmPassword: '',
	});
	const {
		resetUserPasswordMutation,
		results: { data: submitData, loading: submitLoading },
	} = useResetUserPassword();

	// Get the token from the URL
	const params = useParams();
	const key = params.key;
	const login = params.login;

	const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		setCredentials(e.target.value);
	};

	// const errorMessage = useLoginError(errorCode);

	const handleSubmit = (e: React.FormEvent) => {
		e.preventDefault();
		// TODO handle password reset errors
		resetUserPasswordMutation({ key, login: username, password });
	};

	return key && login ? (
		<Container>
			<Heading size='lg'>Reset your password</Heading>
			<Box my={4}>
				<form onSubmit={handleSubmit}>
					<TextInput
						value={password}
						name='password'
						label='Password'
						isRequired
						onChange={handleInputChange}
						inputProps={{
							type: 'password',
							autoComplete: 'new-password',
						}}
					/>
					<TextInput
						value={confirmPassword}
						name='confirmPassword'
						label='Confirm password'
						isRequired
						onChange={handleInputChange}
						inputProps={{
							// autoComplete: 'new-password',
							type: 'password',
						}}
					/>
					<Flex justifyContent='flex-start' gap={4}>
						<Button type='submit' colorScheme='blue' px={6}>
							{submitLoading ? <Spinner size='sm' /> : 'Submit'}
						</Button>
						{submitData && !submitLoading ? (
							<Text fontSize='sm' color='gray.500'>
								Password reset email sent!
							</Text>
						) : (
							false
						)}
					</Flex>
				</form>
			</Box>
		</Container>
	) : (
		<Text fontSize='md' color='brand.red'>
			Invalid reset link. Please try again.
		</Text>
	);
}
